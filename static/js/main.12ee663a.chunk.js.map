{"version":3,"sources":["components/Documentation.js","index.js"],"names":["Documentation","docInput","require","useState","expandedCogs","updateExpandedCogs","expandedExamples","updateExpandedExamples","useEffect","cogs","forEach","cog","name","replace","examples","commands","command","console","log","getCommands","parameters","parameter","push","Fragment","getParameters","id","hasExample","example","undefined","description","className","onClick","expandExample","icon","faCaretRight","faCaretDown","JSON","parse","stringify","documentationJson","docs","expandCog","buildDocumentation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12ee663a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styling/docs.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Documentation = ({ docInput = require('./docs.json') }) => {\r\n  const [expandedCogs, updateExpandedCogs] = useState(null);\r\n  const [expandedExamples, updateExpandedExamples] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (docInput && expandedCogs === null) {\r\n      var cogs = {};\r\n      docInput.forEach((cog) => {\r\n        cogs = {\r\n          ...cogs,\r\n          [`${cog.name.replace(/ /g, '_')}_expanded`]: false,\r\n        };\r\n      });\r\n      updateExpandedCogs(cogs);\r\n    }\r\n\r\n    if (docInput && expandedExamples === null) {\r\n      var examples = {};\r\n      docInput.forEach((cog) => {\r\n        cog.commands.forEach((command) => {\r\n          console.log(command)\r\n          examples = {\r\n            ...examples,\r\n            [`${command.command.replace(/ /g, '_')}_example_expanded`]: true,\r\n          };\r\n        })\r\n      });\r\n\r\n      updateExpandedExamples(examples);\r\n    }\r\n  }, [docInput, expandedCogs, expandedExamples]);\r\n\r\n  const getParameters = (command) => {\r\n    var parameters = [];\r\n    command.parameters.forEach((parameter) => {\r\n      parameters.push(<React.Fragment key={parameter}>[{parameter}]</React.Fragment>);\r\n    });\r\n    return parameters;\r\n  };\r\n\r\n  const getCommands = (cog) => {\r\n    var commands = [];\r\n    cog.commands.forEach((command) => {\r\n      const parameters = getParameters(command);\r\n      const id = `${command.command.replace(/ /g, '_')}_example_expanded`;\r\n      var hasExample = true;\r\n      console.log(command.example)\r\n      if (command.example === undefined) {\r\n        hasExample = false;\r\n      }\r\n\r\n      commands.push(\r\n        <li key={command.command + parameters}>\r\n          <code data-testid=\"documentation-cog-command\">\r\n            {command.command} {parameters}\r\n          </code>\r\n          <div data-testid=\"documentation-cog-description\">{command.description}</div>\r\n          <div key={id} data-testid=\"documentation__expandable\">\r\n            <div className={hasExample ? '' : 'documentation__hidden'}data-testid=\"documentation-cog-example\" onClick={() => expandExample(id)}>\r\n              <FontAwesomeIcon className=\"documentation__caret\" icon={expandedExamples[id] ? faCaretRight : faCaretDown} />\r\n              Open example\r\n            </div>\r\n            <ul className={expandedExamples[id] ? 'documentation__hidden' : ''} data-testid=\"example-commands\">\r\n            {command.example}\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n    return commands;\r\n  };\r\n\r\n  const expandCog = (id) => {\r\n    const cogs = JSON.parse(JSON.stringify(expandedCogs));\r\n    cogs[id] = !cogs[id];\r\n    updateExpandedCogs(cogs);\r\n  };\r\n\r\n  const expandExample = (id) => {\r\n    const examples = JSON.parse(JSON.stringify(expandedExamples));\r\n    examples[id] = !examples[id];\r\n    updateExpandedExamples(examples);\r\n  };\r\n\r\n  const buildDocumentation = (documentationJson) => {\r\n    var docs = [];\r\n    documentationJson.forEach((cog) => {\r\n      const commands = getCommands(cog);\r\n      const id = `${cog.name.replace(/ /g, '_')}_expanded`;\r\n      docs.push(\r\n        <div key={id} data-testid=\"expandable-doc\">\r\n          <div className=\"documentation__expandable\" onClick={() => expandCog(id)} data-testid=\"expand-clickable\">\r\n            <FontAwesomeIcon className=\"documentation__caret\" icon={expandedCogs[id] ? faCaretRight : faCaretDown} />\r\n            <h2 className=\"documentation__cogname\" data-testid=\"documentation-cog-name\">\r\n              {cog.name}\r\n            </h2>\r\n            <div className=\"documentation__divider\" />\r\n          </div>\r\n          <ul className={expandedCogs[id] ? 'documentation__hidden' : ''} data-testid=\"cog-commands\">\r\n            {commands}\r\n          </ul>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return docs;\r\n  };\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <div data-testid=\"documentation\" className=\"documentation\">\r\n        {expandedCogs && docInput ? (\r\n          <>\r\n            <h1 className=\"documentation__title\" data-testid=\"documentation-title\">\r\n              LIST OF COGS\r\n            </h1>\r\n            {buildDocumentation(docInput)}\r\n          </>\r\n        ) : (\r\n          <div className=\"documentation__title\" data-testid=\"documentation-error\">\r\n            Documentation can not be found\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Documentation;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Documentation from './components/Documentation';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Documentation />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}